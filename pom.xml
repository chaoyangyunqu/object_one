<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.shineyue</groupId>
    <artifactId>certSign-service</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>certSign-service</name>
    <description>电子签章</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <!--以下两项需要如果不配置，解析themleaft 会有问题-->
        <!--<thymeleaf.version>3.0.2.RELEASE</thymeleaf.version>-->
        <!--<thymeleaf-layout-dialect.version>2.0.5</thymeleaf-layout-dialect.version>-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- 引入postgresql驱动 -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- 引入jdbc连接数据库 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <!-- 引入mybatis jar包 -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>

        <!-- 引入内置tomcat-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>


        <!--参数校验-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- ********************电子签章依赖******************** start-->

        <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.3</version>
        </dependency>


        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream -->
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.3.1</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.15</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.jms</groupId>
                    <artifactId>jms</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jdmk</groupId>
                    <artifactId>jmxtools</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jmx</groupId>
                    <artifactId>jmxri</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.koal</groupId>
            <artifactId>koal-raapi</artifactId>
            <version>3.3.13</version>
            <!--<scope>system</scope>-->
            <!--<systemPath>${project.basedir}/BOOT-INF/lib/koal_raapi_package-3.3.13.jar</systemPath>-->
        </dependency>

        <dependency>
            <groupId>com.koal</groupId>
            <artifactId>koal-common</artifactId>
            <version>0.1.10</version>
            <!--<scope>system</scope>-->
            <!--<systemPath>${project.basedir}/BOOT-INF/lib/koal_common-0.1.10.jar</systemPath>-->
        </dependency>

        <dependency>
            <groupId>com.koal</groupId>
            <artifactId>koal-caclient</artifactId>
            <version>1.3.7</version>
            <!--<scope>system</scope>-->
            <!--<systemPath>${project.basedir}/BOOT-INF/lib/szt0901.ca.caclient-1.3.7.jar</systemPath>-->
        </dependency>

        <dependency>
            <groupId>com.koal</groupId>
            <artifactId>koal-security</artifactId>
            <version>3.0.0</version>
            <!--<scope>system</scope>-->
            <!--<systemPath>${project.basedir}/BOOT-INF/lib/koal_security-3.0.0.jar</systemPath>-->
        </dependency>

        <dependency>
            <groupId>com.koal</groupId>
            <artifactId>koal-webframe</artifactId>
            <version>0.1.11</version>
            <!--<scope>system</scope>-->
            <!--<systemPath>${project.basedir}/BOOT-INF/lib/koal_webframe-0.1.11.jar</systemPath>-->
        </dependency>

        <dependency>
            <groupId>com.apache</groupId>
            <artifactId>jakata-struts</artifactId>
            <version>1.1</version>
            <!--<scope>system</scope>-->
            <!--<systemPath>${project.basedir}/BOOT-INF/lib/jakata-struts-1.1.jar</systemPath>-->
        </dependency>
        <dependency>
            <groupId>xpp3-min</groupId>
            <artifactId>min</artifactId>
            <version>1.1.4c</version>
        </dependency>

        <!-- ********************电子签章依赖******************** end-->

        <!--引入热部署-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <!--引入h5解析-->
        <dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
        </dependency>

        <!--引入thyemleaf模板-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!--fastjson-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.58</version>
        </dependency>

        <!--http-->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <!--gson-->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <!--引入多环境配置-->
    <profiles>
        <!-- 公司内部测试环境 -->
        <profile>
            <id>internalTest</id>
            <properties>
                <spring.profiles.active>internalTest</spring.profiles.active>
            </properties>
        </profile>
        <!-- 华为云测试环境 -->
        <profile>
            <id>huaweiCloudTest</id>
            <properties>
                <spring.profiles.active>huaweiCloudTest</spring.profiles.active>
            </properties>
        </profile>
        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 生产环境 -->
        <profile>
            <id>release</id>
            <properties>
                <spring.profiles.active>release</spring.profiles.active>
            </properties>
        </profile>
    </profiles>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--把新疆CA的jar包也引入进去-->
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <!--将配置文件打包到指定位置-->
                            <outputDirectory>${project.build.directory}/config</outputDirectory>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <delimiters>
                                <delimiter>#</delimiter>
                            </delimiters>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>*.properties</include>
                                        <include>*.yml</include>
                                        <!--多环境动态切换yml配置 示例：使用mvn install -P 【环境名】打包-->
                                        <!--<include>application-${spring.profiles.active}.yml</include>-->
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <distributionManagement>
        <repository>
            <id>XJFCRelease</id>
            <name>XJFCS</name>
            <url>http://192.168.5.20/nexus/content/repositories/XJFCRelease</url>
        </repository>
        <snapshotRepository>
            <id>XJFCSnapshots</id>
            <name>XJFCS</name>
            <url>http://192.168.5.20/nexus/content/repositories/XJFCSnapshots</url>
        </snapshotRepository>
    </distributionManagement>

</project>
